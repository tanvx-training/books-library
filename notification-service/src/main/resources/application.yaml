server:
  port: 8883

spring:
  application:
    name: notification-service
  datasource:
    url: jdbc:postgresql://${DATASOURCE_HOST:localhost}:5432/notification-service
    username: ${DB_USERNAME:postgres}
    password: ${DB_PASSWORD:password}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: none
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect

# config kafka
  kafka:
    bootstrap-servers: ${KAFKA_SERVER:localhost:9092}
    security:
      protocol: plaintext
    consumer:
      group-id: book-group
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      auto-offset-reset: earliest
      enable-auto-commit: true
      properties:
        spring.json.trusted.packages: '*'
        spring.json.use.type.headers: false
        partition.assignment.strategy: org.apache.kafka.clients.consumer.CooperativeStickyAssignor



#eureka:
#  client:
#    service-url:
#      defaultZone: http://${EUREKA_HOST:localhost}:8761/eureka
#    fetch-registry: true
#    register-with-eureka: true
#
#logging:
#  level:
#    org.springframework.kafka: DEBUG
#    com.library.notification: DEBUG
