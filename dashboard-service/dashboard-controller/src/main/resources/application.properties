# =============================================================================
# DASHBOARD SERVICE CONFIGURATION
# =============================================================================

# Application Configuration
spring.application.name=dashboard-service
server.port=9992
# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================
spring.datasource.url=jdbc:postgresql://${DATASOURCE_HOST:localhost}:5432/library-project
spring.datasource.username=${DB_USERNAME:postgres}
spring.datasource.password=${DB_PASSWORD:password}
spring.datasource.driver-class-name=org.postgresql.Driver

# Connection Pool Configuration
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.max-lifetime=1200000

# =============================================================================
# JPA CONFIGURATION
# =============================================================================
# JPA/Hibernate Configuration
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.jdbc.batch_size=20
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true
spring.jpa.open-in-view=false

# Hibernate Properties
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

# =============================================================================
# KAFKA CONFIGURATION
# =============================================================================
spring.kafka.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}

# Kafka Consumer Configuration
spring.kafka.consumer.group-id=${KAFKA_CONSUMER_GROUP:audit-consumer}
spring.kafka.consumer.auto-offset-reset=latest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.enable-auto-commit=true

# Kafka Consumer Properties
spring.kafka.consumer.properties.spring.json.trusted.packages='*'
spring.kafka.consumer.properties.security.protocol=${KAFKA_SECURITY_PROTOCOL:PLAINTEXT}
spring.kafka.consumer.properties.spring.json.use.type.headers=false
spring.kafka.consumer.properties.partition.assignment.strategy=org.apache.kafka.clients.consumer.CooperativeStickyAssignor

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8080/realms/library-realm
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://localhost:8080/realms/library-realm/protocol/openid-connect/certs
# =============================================================================
# AUDIT CONFIGURATION
# =============================================================================
audit.kafka.topics=catalog-service-audit-logs

# =============================================================================
# EUREKA CONFIGURATION
# =============================================================================
eureka.client.service-url.defaultZone=http://${EUREKA_HOST:localhost}:8761/eureka
eureka.client.fetch-registry=true
eureka.client.register-with-eureka=true