spring.application.name=loan-service
server.port=9995

# eureka config
eureka.client.service-url.defaultZone=http://${EUREKA_HOST:localhost}:8761/eureka
eureka.client.fetch-registry=true
eureka.client.register-with-eureka=true

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================
# OAuth2 Resource Server Configuration for Keycloak
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8080/realms/library-realm
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://localhost:8080/realms/library-realm/protocol/openid-connect/certs

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================
spring.datasource.url=jdbc:postgresql://${DATASOURCE_HOST:localhost}:5432/library_management
spring.datasource.username=${DB_USERNAME:postgres}
spring.datasource.password=${DB_PASSWORD:password}
spring.datasource.driver-class-name=org.postgresql.Driver

# Connection Pool Configuration
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.max-lifetime=1200000

# =============================================================================
# JPA CONFIGURATION
# =============================================================================
# JPA/Hibernate Configuration
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.jdbc.batch_size=20
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true
spring.jpa.open-in-view=false

# Hibernate Properties
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

# Logging Configuration
logging.level.org.springframework.orm.jpa=INFO
logging.level.org.springframework.transaction=INFO
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# Server
spring.kafka.bootstrap-servers=${KAFKA_SERVER:localhost:9092}
spring.kafka.properties.security.protocol=PLAINTEXT

# Producer
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.acks=all
spring.kafka.producer.retries=30
spring.kafka.producer.compression-type=lz4
spring.kafka.producer.properties.enable.idempotence=true
spring.kafka.producer.properties.max.in.flight.requests.per.connection=5
spring.kafka.producer.properties.spring.json.add.type.headers=false

# Audit Configuration
audit.kafka.topic=loan-service-audit-logs